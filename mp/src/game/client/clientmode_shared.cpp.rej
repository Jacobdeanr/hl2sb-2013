diff a/mp/src/game/client/clientmode_shared.cpp b/mp/src/game/client/clientmode_shared.cpp	(rejected hunks)
@@ -35,6 +35,11 @@
 #if defined( _X360 )
 #include "xbox/xbox_console.h"
 #endif
+#if defined( LUA_SDK )
+#include "luamanager.h"
+#include "lbaseentity_shared.h"
+#include "lbaseplayer_shared.h"
+#endif
 
 // memdbgon must be the last include file in a .cpp file!!!
 #include "tier0/memdbgon.h"
@@ -169,7 +180,15 @@ ClientModeShared::ClientModeShared()
 //-----------------------------------------------------------------------------
 ClientModeShared::~ClientModeShared()
 {
+#ifdef LUA_SDK
+	// NOTE: Due to the behavior of many crashes, if you end up here from a
+	// .mdmp or debug attach, you might as well ignore this call stack.
+	delete m_pScriptedViewport; 
+#endif
 	delete m_pViewport; 
+#ifdef LUA_SDK
+	delete m_pClientLuaPanel; 
+#endif
 }
 
 void ClientModeShared::ReloadScheme( void )
@@ -298,11 +325,26 @@ void ClientModeShared::OverrideView( CViewSetup *pSetup )
 //-----------------------------------------------------------------------------
 bool ClientModeShared::ShouldDrawEntity(C_BaseEntity *pEnt)
 {
+#ifdef LUA_SDK
+	BEGIN_LUA_CALL_HOOK( "ShouldDrawEntity" );
+		lua_pushentity( L, pEnt );
+	END_LUA_CALL_HOOK( 1, 1 );
+
+	RETURN_LUA_BOOLEAN();
+#endif
+
 	return true;
 }
 
 bool ClientModeShared::ShouldDrawParticles( )
 {
+#ifdef LUA_SDK
+	BEGIN_LUA_CALL_HOOK( "ShouldDrawParticles" );
+	END_LUA_CALL_HOOK( 0, 1 );
+
+	RETURN_LUA_BOOLEAN();
+#endif
+
 	return true;
 }
 
@@ -392,6 +509,13 @@ void ClientModeShared::PostRenderVGui()
 //-----------------------------------------------------------------------------
 void ClientModeShared::Update()
 {
+#ifdef LUA_SDK
+	if ( m_pScriptedViewport->IsVisible() != cl_drawhud.GetBool() )
+	{
+		m_pScriptedViewport->SetVisible( cl_drawhud.GetBool() );
+	}
+#endif
+
 	if ( m_pViewport->IsVisible() != cl_drawhud.GetBool() )
 	{
 		m_pViewport->SetVisible( cl_drawhud.GetBool() );
@@ -604,21 +741,57 @@ void ClientModeShared::Enable()
 	// Add our viewport to the root panel.
 	if( (pRoot = VGui_GetClientDLLRootPanel() ) != NULL )
 	{
+#ifdef LUA_SDK
+		m_pScriptedViewport->SetParent( pRoot );
+#endif
 		m_pViewport->SetParent( pRoot );
+#ifdef LUA_SDK
+		m_pClientLuaPanel->SetParent( pRoot );
+#endif
 	}
 
 	// All hud elements should be proportional
 	// This sets that flag on the viewport and all child panels
+#ifdef LUA_SDK
+	m_pScriptedViewport->SetProportional( true );
+#endif
 	m_pViewport->SetProportional( true );
+#ifdef LUA_SDK
+	m_pClientLuaPanel->SetProportional( false );
+#endif
 
+#ifdef LUA_SDK
+	m_pScriptedViewport->SetCursor( m_CursorNone );
+#endif
 	m_pViewport->SetCursor( m_CursorNone );
+#ifdef LUA_SDK
+	m_pClientLuaPanel->SetCursor( m_CursorNone );
+#endif
 	vgui::surface()->SetCursor( m_CursorNone );
 
+#ifdef LUA_SDK
+	m_pScriptedViewport->SetVisible( true );
+#endif
 	m_pViewport->SetVisible( true );
+#ifdef LUA_SDK
+	m_pClientLuaPanel->SetVisible( true );
+#endif
+#ifdef LUA_SDK
+	if ( m_pScriptedViewport->IsKeyBoardInputEnabled() )
+	{
+		m_pScriptedViewport->RequestFocus();
+	}
+#endif
 	if ( m_pViewport->IsKeyBoardInputEnabled() )
 	{
 		m_pViewport->RequestFocus();
 	}
+#ifdef LUA_SDK
+	if ( m_pClientLuaPanel->IsKeyBoardInputEnabled() )
+	{
+		m_pClientLuaPanel->RequestFocus();
+	}
+#endif
 
 	Layout();
 }
@@ -631,10 +804,22 @@ void ClientModeShared::Disable()
 	// Remove our viewport from the root panel.
 	if( ( pRoot = VGui_GetClientDLLRootPanel() ) != NULL )
 	{
+#ifdef LUA_SDK
+		m_pScriptedViewport->SetParent( (vgui::VPANEL)NULL );
+#endif
 		m_pViewport->SetParent( (vgui::VPANEL)NULL );
+#ifdef LUA_SDK
+		m_pClientLuaPanel->SetParent( (vgui::VPANEL)NULL );
+#endif
 	}
 
+#ifdef LUA_SDK
+	m_pScriptedViewport->SetVisible( false );
+#endif
 	m_pViewport->SetVisible( false );
+#ifdef LUA_SDK
+	m_pClientLuaPanel->SetVisible( false );
+#endif
 }
 
 
@@ -652,7 +837,13 @@ void ClientModeShared::Layout()
 		m_nRootSize[ 0 ] = wide;
 		m_nRootSize[ 1 ] = tall;
 
+#ifdef LUA_SDK
+		m_pScriptedViewport->SetBounds(0, 0, wide, tall);
+#endif
 		m_pViewport->SetBounds(0, 0, wide, tall);
+#ifdef LUA_SDK
+		m_pClientLuaPanel->SetBounds(0, 0, wide, tall);
+#endif
 		if ( changed )
 		{
 			ReloadScheme();
